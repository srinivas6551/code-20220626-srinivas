{   
    "AWSTemplateFormatVersion": "2010-09-09",
    "Resources" : {
        "LambdaFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "LambdaFunctionLogsPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "LambdaFunctionSQSPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:ReceiveMessage",
                                        "sqs:DeleteMessage",
                                        "sqs:GetQueueAttributes",
                                        "sqs:ChangeMessageVisibility"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
      
      "LambdaFunctionQueueEvent" :{
        "Type" : "AWS::Lambda::EventSourceMapping",
        "Properties" : {
            "Enabled" : true,
            "EventSourceArn" : "arn:aws:sqs:us-east-1:168668704529:v_ass_que1",
            "FunctionName" : {
                "Fn::GetAtt": [
                    "VAssgLambdaFunction",
                    "Arn"
                ]
            }
        }
      },
        

      "VAssgLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "FunctionName": "VAsg-Queue-processor",
          "Role": {
            "Fn::GetAtt": [
                "LambdaFunctionRole",
                "Arn"
            ]
          },
          "Runtime": "python3.7",
          "Handler": "index.lambda_handler",
          "Code": {
            "ZipFile": "import json import boto3 def lambda_handler(event, context): # TODO implement print(\"Event result \", event) body = json.loads(event[\"Records\"][0][\"body\"]) print(\"Body: \", body) process_v_assgn_queue(body) return { 'statusCode': 200, 'body': json.dumps('Hello from Lambda!') } def process_v_assgn_queue(body): s3 = boto3.client(\"s3\") print(\"Processing Queue messages\") filename = body['Timestamp']+\".txt\" fileContent = body['Message'] print(\"Writing Data to S3 Bucket\") s3.put_object(Bucket=\"v-assement-bucket\", Key=filename, Body=fileContent)"
          }
        }
      }
    }
  }
